import java.util.Scanner;
import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicInteger;

// Class to represent a single quiz question
class Question {
    private String question;
    private String[] options;
    private char correctAnswer;

    public Question(String question, String[] options, char correctAnswer) {
        this.question = question;
        this.options = options;
        this.correctAnswer = correctAnswer;
    }

    public String getQuestion() {
        return question;
    }

    public String[] getOptions() {
        return options;
    }

    public char getCorrectAnswer() {
        return correctAnswer;
    }

    public boolean isCorrect(char answer) {
        return answer == correctAnswer;
    }
}

// Main Quiz Application
public class QuizApplication {
    private static Question[] questions = {
        new Question("What is the capital of France?", new String[]{"A. Paris", "B. London", "C. Berlin", "D. Madrid"}, 'A'),
        new Question("What is the largest planet in our solar system?", new String[]{"A. Earth", "B. Mars", "C. Jupiter", "D. Saturn"}, 'C'),
        new Question("Who wrote 'To Kill a Mockingbird'?", new String[]{"A. Harper Lee", "B. Mark Twain", "C. Ernest Hemingway", "D. F. Scott Fitzgerald"}, 'A')
    };
   
    private static int score = 0;
    private static int totalQuestions = questions.length;
    private static Scanner scanner = new Scanner(System.in);
    private static final int QUESTION_TIME_LIMIT = 10; // time limit per question in seconds

    public static void main(String[] args) {
        System.out.println("Welcome to the Quiz!");

        for (int i = 0; i < totalQuestions; i++) {
            askQuestion(questions[i]);
        }

        displayResults();
    }

    private static void askQuestion(Question question) {
        AtomicBoolean answered = new AtomicBoolean(false);
        AtomicInteger timeRemaining = new AtomicInteger(QUESTION_TIME_LIMIT);
        Timer timer = new Timer();
        TimerTask task = new TimerTask() {
            @Override
            public void run() {
                if (timeRemaining.getAndDecrement() > 0) {
                    System.out.print("\rTime remaining: " + timeRemaining.get() + " seconds");
                } else {
                    System.out.println("\nTime's up!");
                    answered.set(true);
                    timer.cancel();
                }
            }
        };

        timer.scheduleAtFixedRate(task, 0, 1000);

        System.out.println("\n" + question.getQuestion());
        for (String option : question.getOptions()) {
            System.out.println(option);
        }

        while (!answered.get()) {
            if (scanner.hasNextLine()) {
                String answer = scanner.nextLine().toUpperCase();
                if (answer.length() == 1 && "ABCD".indexOf(answer.charAt(0)) != -1) {
                    answered.set(true);
                    timer.cancel();
                    if (question.isCorrect(answer.charAt(0))) {
                        System.out.println("Correct!");
                        score++;
                    } else {
                        System.out.println("Incorrect. The correct answer is " + question.getCorrectAnswer());
                    }
                } else {
                    System.out.println("Invalid input. Please enter A, B, C, or D.");
                }
            }
        }
    }

    private static void displayResults() {
        System.out.println("\nQuiz Over!");
        System.out.println("Your score: " + score + " out of " + totalQuestions);
        for (int i = 0; i < totalQuestions; i++) {
            Question question = questions[i];
            System.out.println((i + 1) + ". " + question.getQuestion());
            System.out.println("Correct answer: " + question.getCorrectAnswer());
        }
    }
}
